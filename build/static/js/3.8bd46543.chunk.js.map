{"version":3,"sources":["components/DataLabel/DataLabel.styles.ts","components/DataLabel/DataLabelUtils.ts","components/RecoveredComponent/RecoveredComponent.styles.ts","components/RecoveredComponent/RecoveredComponent.tsx","components/ShowMoreComponent/ShowMoreComponent.styles.ts","components/ShowMoreComponent/ShowMoreComponent.tsx","components/DataLabel/DataLabel.tsx","components/MissionDetailsSection/MissionDetailsSection.styles.ts","components/Button/Button.styles.ts","components/Button/Button.tsx","components/MissionDetailsSection/MissionDetailsSection.tsx"],"names":["DataLabelWrapper","styled","div","type","console","error","getMobileMarginValue","getDesktopMarginValue","DataLabelHeading","h3","theme","fontWeight","default","isHeadingBigger","fontSize","m","s","fontColor","secondary","DataLabelText","p","dataTextIsBig","bold","xl","primary","xm","xxl","StyledRecoveredComponent","span","invertedPrimary","borderRadius","allCornersS","xs","isRecovered","componentColor","success","RecoveredComponent","StyledSpan","ShowMoreComponent","data","DataLabel","headingText","hasRecoveredComponent","longerData","useState","showDetails","setShowDetails","onMouseEnter","undefined","onMouseLeave","MissionDetailsWrapper","FlexColumnWrapper","StyledLink","a","StyledButton","button","Button","buttonText","articleLink","isLink","href","alt","MissionDetailsSection","missionData","mission_name","rocket","first_stage","cores","land_success","rocket_name","links","article_link","video_link","launch_date_local","replace","launch_site","site_name","site_name_long"],"mappings":"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","file":"static/js/3.8bd46543.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { getMobileMarginValue, getDesktopMarginValue } from './DataLabelUtils';\n\ninterface DataLabelWrapperProps {\n  type: string;\n}\n\nexport const DataLabelWrapper = styled.div<DataLabelWrapperProps>`\n  position: relative;\n  width: 100%;\n  max-width: 520px;\n  margin: auto;\n  text-align: inherit;\n  margin-bottom: ${({ type }) => getMobileMarginValue(type)};\n\n  @media only screen and (min-width: 768px) {\n    margin: 0; // reseting margin auto\n    margin-bottom: ${({ type }) => getDesktopMarginValue(type)};\n  }\n`;\n\ninterface DataLabelHeadingProps {\n  isHeadingBigger?: boolean;\n}\n\nexport const DataLabelHeading = styled.h3<DataLabelHeadingProps>`\n  font-weight: ${({ theme }) => theme.fontWeight.default};\n  font-size: ${({ isHeadingBigger, theme }) =>\n    isHeadingBigger ? theme.fontSize.m : theme.fontSize.s};\n  color: ${({ theme }) => theme.fontColor.secondary};\n  line-height: ${({ isHeadingBigger }) => (isHeadingBigger ? '19px' : '16.41px')};\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  margin-bottom: 7px;\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 8px;\n    line-height: 19px;\n    font-size: ${({ theme }) => theme.fontSize.m};\n  }\n`;\n\ninterface DataLabelTextProps {\n  dataTextIsBig?: boolean;\n}\n\nexport const DataLabelText = styled.p<DataLabelTextProps>`\n  display: inline;\n  font-weight: ${({ dataTextIsBig, theme }) =>\n    dataTextIsBig ? theme.fontWeight.bold : theme.fontWeight.default};\n  font-size: ${({ dataTextIsBig, theme }) =>\n    dataTextIsBig ? theme.fontSize.xl : theme.fontSize.m};\n  line-height: ${({ dataTextIsBig }) => (dataTextIsBig ? '40px' : '18.75px')};\n  color: ${({ theme }) => theme.fontColor.primary};\n  margin-top: ${({ dataTextIsBig }) => (dataTextIsBig ? '8px' : '0px')};\n\n  @media only screen and (min-width: 768px) {\n    font-size: ${({ dataTextIsBig, theme }) =>\n      dataTextIsBig ? theme.fontSize.xl : theme.fontSize.xm};\n    line-height: ${({ dataTextIsBig }) => (dataTextIsBig ? '49px' : '21.09px')};\n  }\n\n  @media only screen and (min-width: 1200px) {\n    font-size: ${({ dataTextIsBig, theme }) =>\n      dataTextIsBig ? theme.fontSize.xxl : theme.fontSize.xm};\n    margin-top: ${({ dataTextIsBig }) => (dataTextIsBig ? '12px' : '0px')};\n  }\n`;\n","export const getMobileMarginValue = (type: string) => {\n  switch (type) {\n    case 'mission_label':\n      return '20px';\n\n    case 'rocket_name_label':\n      return '30px';\n\n    case 'launch_date':\n      return '19px';\n\n    case 'launch_site':\n      return '20px';\n\n    case 'rescue_ships_label':\n      return '17px';\n\n    default:\n      throw console.error('Type prop should have a string value');\n  }\n};\n\nexport const getDesktopMarginValue = (type: string) => {\n  switch (type) {\n    case 'mission_label':\n      return '23px';\n\n    case 'rocket_name_label':\n      return '40px';\n\n    case 'launch_date':\n      return '23px';\n\n    case 'launch_site':\n      return '23px';\n\n    case 'rescue_ships_label':\n      return '17px';\n\n    default:\n      throw console.error('Type prop should have a string value');\n  }\n};\n","import styled from 'styled-components';\n\ninterface RecoveredComponentProps {\n  isRecovered: boolean;\n}\n\nexport const StyledRecoveredComponent = styled.span<RecoveredComponentProps>`\n  color: ${({ theme }) => theme.fontColor.invertedPrimary};\n  background-color: green;\n  margin-left: 9px;\n  border-radius: ${({ theme }) => theme.borderRadius.allCornersS};\n  font-size: ${({ theme }) => theme.fontSize.xs};\n  padding: 3px 5px 3px 6px;\n  background-color: ${({ theme, isRecovered }) =>\n    isRecovered ? theme.componentColor.success : theme.componentColor.error};\n  font-weight: ${({ theme }) => theme.fontWeight.bold};\n  letter-spacing: 0.1em;\n  line-height: 14px;\n`;\n","import React from 'react';\nimport { StyledRecoveredComponent } from './RecoveredComponent.styles';\n\ninterface RecoveredComponentProps {\n  isRecovered: boolean;\n}\n\nexport const RecoveredComponent = ({ isRecovered }: RecoveredComponentProps) => (\n  <StyledRecoveredComponent isRecovered={isRecovered}>\n    {isRecovered ? 'RECOVERED' : 'UNRECOVERED'}\n  </StyledRecoveredComponent>\n);\n","import styled from 'styled-components';\n\nexport const StyledSpan = styled.span`\n  position: absolute;\n  padding: 7px 10px;\n  font-weight: ${({ theme }) => theme.fontWeight.default};\n  font-size: ${({ theme }) => theme.fontSize.s};\n  line-height: 16px;\n  background: ${({ theme }) => theme.componentColor.primary};\n  color: ${({ theme }) => theme.fontColor.invertedPrimary};\n  bottom: -30px;\n  right: 55px;\n  border-radius: ${({ theme }) => theme.borderRadius.allCornersS};\n\n  @media only screen and (min-width: 768px) {\n    white-space: nowrap;\n  }\n`;\n","import React from 'react';\nimport { StyledSpan } from './ShowMoreComponent.styles';\n\ninterface ShowMoreComponentProps {\n  data: string | undefined;\n}\n\nexport const ShowMoreComponent = ({ data }: ShowMoreComponentProps) => {\n  return <StyledSpan>{data}</StyledSpan>;\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport { DataLabelWrapper, DataLabelHeading, DataLabelText } from './DataLabel.styles';\nimport { RecoveredComponent } from '../RecoveredComponent/RecoveredComponent';\nimport { ShowMoreComponent } from '../ShowMoreComponent/ShowMoreComponent';\n\ninterface DataLabelProps {\n  headingText: string;\n  type: string;\n  dataTextIsBig?: boolean;\n  data?: string;\n  hasRecoveredComponent?: {\n    data: boolean;\n  };\n  isHeadingBigger?: boolean;\n  longerData?: string;\n  onMouseEnter?: React.MouseEventHandler<HTMLParagraphElement> | undefined;\n  onMouseLeave?: React.MouseEventHandler<HTMLParagraphElement> | undefined;\n}\n\nexport const DataLabel = ({\n  headingText,\n  data,\n  dataTextIsBig,\n  type,\n  hasRecoveredComponent,\n  isHeadingBigger,\n  longerData,\n}: DataLabelProps) => {\n  const [showDetails, setShowDetails] = useState(false);\n\n  const handleMouseEnter: React.MouseEventHandler<HTMLParagraphElement> = (): void => {\n    setShowDetails(true);\n  };\n\n  const handleMouseLeave: React.MouseEventHandler<HTMLParagraphElement> = (): void => {\n    setShowDetails(false);\n  };\n\n  return (\n    <DataLabelWrapper type={type}>\n      <DataLabelHeading isHeadingBigger={isHeadingBigger}>{headingText}</DataLabelHeading>\n      {data && (\n        <DataLabelText\n          onMouseEnter={type === 'launch_site' ? handleMouseEnter : undefined}\n          onMouseLeave={type === 'launch_site' ? handleMouseLeave : undefined}\n          dataTextIsBig={dataTextIsBig}\n        >\n          {data}\n          {hasRecoveredComponent && <RecoveredComponent isRecovered={hasRecoveredComponent.data} />}\n          {showDetails && <ShowMoreComponent data={longerData} />}\n        </DataLabelText>\n      )}\n    </DataLabelWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MissionDetailsWrapper = styled.div`\n  color: ${({ theme }) => theme.fontColor.primary};\n  display: flex;\n  flex-direction: column;\n  padding: 17px 15px 0px 15px;\n  border-bottom: 1px solid ${({ theme }) => theme.componentColor.secondary};\n  max-width: 1140px;\n  margin: auto;\n\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    padding: 36px 25px 0px 25px;\n    max-width: 1200px;\n  }\n\n  @media only screen and (min-width: 1200px) {\n    max-width: 1140px;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    padding: 36px 0px 0px 0px;\n  }\n`;\n\nexport const FlexColumnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  width: 100%;\n  max-width: 520px;\n  justify-content: flex-start;\n\n  @media only screen and (min-width: 768px) {\n    width: 50%;\n    max-width: 425px;\n    margin: 0; // reseting margin auto\n    &:nth-of-type(2n) {\n      text-align: right;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\ninterface StyledLinkProps {\n  alt: string;\n}\n\nexport const StyledLink = styled.a<StyledLinkProps>`\n  padding: 19px 0;\n  background: none;\n  color: ${({ theme }) => theme.fontColor.primary};\n  border: 2px solid ${({ theme }) => theme.componentColor.primary};\n  cursor: pointer;\n  margin-bottom: 27px;\n  line-height: 16.41px;\n  font-size: ${({ theme }) => theme.fontSize.s};\n  font-weight: ${({ theme }) => theme.fontWeight.default};\n  width: 100%;\n  text-decoration: none;\n  text-align: center;\n\n  &:focus {\n    outline-offset: 2px;\n    outline: 5px auto blue;\n    outline: 5px auto -webkit-focus-ring-color;\n  }\n\n  &:hover {\n    background-color: ${({ theme }) => theme.componentColor.primary + '15'};\n    outline: none;\n  }\n\n  &:active {\n    background: none;\n  }\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 40px;\n    width: 160px;\n  }\n`;\n\nexport const StyledButton = styled.button`\n  padding: 19px 0;\n  background: none;\n  color: ${({ theme }) => theme.fontColor.primary};\n  border: 2px solid ${({ theme }) => theme.componentColor.primary};\n  cursor: pointer;\n  margin-bottom: 27px;\n  line-height: 16.41px;\n  font-size: ${({ theme }) => theme.fontSize.s};\n  font-weight: ${({ theme }) => theme.fontWeight.default};\n  width: 100%;\n  text-decoration: none;\n  text-align: center;\n  &:hover {\n    background-color: ${({ theme }) => theme.componentColor.primary + '15'};\n  }\n\n  &:active {\n    background: none;\n  }\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 40px;\n    width: 160px;\n  }\n`;\n","import React from 'react';\nimport { StyledButton, StyledLink } from './Button.styles';\n\ninterface ButtonProps {\n  buttonText: string;\n  articleLink?: string;\n  isLink?: boolean;\n}\n\nexport const Button = ({ buttonText, articleLink, isLink }: ButtonProps) =>\n  isLink ? (\n    <StyledLink href={articleLink} alt={buttonText}>\n      {buttonText}\n    </StyledLink>\n  ) : (\n    <StyledButton>{buttonText}</StyledButton>\n  );\n","import React from 'react';\nimport { MissionDetailsWrapper, FlexColumnWrapper } from './MissionDetailsSection.styles';\nimport { DataLabel } from '../DataLabel/DataLabel';\nimport { Button } from '../Button/Button';\nimport { MissionDataModel } from '../../api/responseModel';\n\ninterface MissionDetailsSectionProps {\n  missionData: MissionDataModel;\n}\n\nconst MissionDetailsSection = ({ missionData }: MissionDetailsSectionProps) => {\n  return (\n    <MissionDetailsWrapper>\n      <FlexColumnWrapper>\n        <DataLabel\n          dataTextIsBig\n          headingText=\"MISSION\"\n          data={missionData.mission_name}\n          type=\"mission_label\"\n        />\n        <DataLabel\n          hasRecoveredComponent={{\n            data: missionData.rocket.first_stage.cores[0].land_success,\n          }}\n          headingText=\"ROCKET\"\n          data={missionData.rocket.rocket_name}\n          type=\"rocket_name_label\"\n        />\n        <Button\n          isLink\n          articleLink={\n            !missionData.links.article_link\n              ? missionData.links.video_link\n              : missionData.links.article_link\n          }\n          buttonText=\"LEARN MORE\"\n        />\n      </FlexColumnWrapper>\n      <FlexColumnWrapper>\n        <DataLabel\n          headingText=\"LAUNCH DATE\"\n          data={missionData.launch_date_local.replace('T', ' ')}\n          type=\"launch_date\"\n        />\n        <DataLabel\n          headingText=\"LAUNCH SITE\"\n          data={missionData.launch_site.site_name}\n          longerData={missionData.launch_site.site_name_long}\n          type=\"launch_site\"\n        />\n      </FlexColumnWrapper>\n    </MissionDetailsWrapper>\n  );\n};\n\nexport default MissionDetailsSection;\n"],"sourceRoot":""}